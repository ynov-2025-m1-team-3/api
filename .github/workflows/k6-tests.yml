name: Performance Tests with k6 (Docker)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  k6-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Create docker-compose for CI
      run: |
        cat > docker-compose.ci.yml << 'EOF'
        version: '3.8'
        services:
          db:
            image: postgres:15
            environment:
              POSTGRES_DB: testdb
              POSTGRES_USER: testuser
              POSTGRES_PASSWORD: testpass
            healthcheck:
              test: ["CMD-SHELL", "pg_isready -U testuser -d testdb"]
              interval: 5s
              timeout: 5s
              retries: 5
          
          redis:
            image: redis:alpine
            healthcheck:
              test: ["CMD", "redis-cli", "ping"]
              interval: 5s
              timeout: 5s
              retries: 5
          
          api:
            build: ./api
            ports:
              - "3000:3000"
            environment:
              NODE_ENV: test
              DATABASE_URL: postgresql://testuser:testpass@db:5432/testdb
              REDIS_URL: redis://redis:6379
              JWT_SECRET: test-jwt-secret-key-for-ci
            depends_on:
              db:
                condition: service_healthy
              redis:
                condition: service_healthy
            healthcheck:
              test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
              interval: 10s
              timeout: 5s
              retries: 10
        EOF
    
    - name: Start services
      run: |
        docker-compose -f docker-compose.ci.yml up -d
        echo "Waiting for services to be healthy..."
        docker-compose -f docker-compose.ci.yml ps
        
        # Wait for API health check
        timeout 120 bash -c 'until curl -f http://localhost:3000/api/health; do 
          echo "Waiting for API..."
          sleep 5
        done'
        
        echo "âœ… All services are ready!"
    
    - name: Run k6 tests
      run: |
        # Install k6
        sudo apt update
        sudo snap install k6
        
        # Run tests
        k6 run --duration 1m --vus 3 api/test/metrics.test.js
      continue-on-error: true
    
    - name: Show logs
      if: always()
      run: |
        echo "=== API Logs ==="
        docker-compose -f docker-compose.ci.yml logs api
    
    - name: Cleanup
      if: always()
      run: |
        docker-compose -f docker-compose.ci.yml down -v