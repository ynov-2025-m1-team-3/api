name: Performance Tests with k6

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  k6-tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: api/package-lock.json
    
    - name: Install API dependencies
      run: |
        cd api
        npm ci
    
    - name: Setup database
      run: |
        cd api
        npx prisma generate
        npx prisma migrate deploy
        npx prisma db seed
      env:
        DATABASE_URL: postgresql://testuser:testpass@localhost:5432/testdb
    
    - name: Start API server in background
      run: |
        cd api
        npm start &
        echo $! > api.pid
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://testuser:testpass@localhost:5432/testdb
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-jwt-secret-key-for-ci
        PORT: 3000
    
    - name: Wait for API to be ready
      run: |
        echo "Waiting for API to start..."
        timeout 120 bash -c 'until curl -f http://localhost:3000/api/health 2>/dev/null; do 
          echo "API not ready yet, waiting..."
          sleep 2
        done'
        echo "✅ API is ready!"
        
        # Test that auth endpoints are accessible
        echo "Testing auth endpoints..."
        curl -v http://localhost:3000/api/auth/register || echo "Register endpoint check"
    
    - name: Verify API is running
      run: |
        echo "=== API Status Check ==="
        curl -v http://localhost:3000/api/health || echo "Health check failed"
        
        # Check if the process is still running
        if ps -p $(cat api.pid) > /dev/null; then
          echo "✅ API process is running (PID: $(cat api.pid))"
        else
          echo "❌ API process is not running"
          exit 1
        fi
        
        # Show API logs
        echo "=== Checking API logs ==="
        tail -n 20 /home/runner/.npm/_logs/*.log || echo "No npm logs found"
    
    - name: Install k6
      run: |
        sudo gpg -k
        sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver keyserver.ubuntu.com --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
        echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
        sudo apt-get update
        sudo apt-get install k6
    
    - name: Run k6 Performance Tests
      run: |
        cd api
        k6 run --duration 2m --vus 5 test/metrics.test.js
      continue-on-error: true
    
    - name: Stop API server
      if: always()
      run: |
        if [ -f api.pid ]; then
          kill $(cat api.pid) || echo "API process already stopped"
        fi
    
    - name: Upload k6 results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: k6-results
        path: |
          api/k6-results/
        retention-days: 7